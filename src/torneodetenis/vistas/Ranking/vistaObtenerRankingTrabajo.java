/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package torneodetenis.vistas.Ranking;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import torneodetenis.control.RankingData;
import torneodetenis.control.TorneoData;
import torneodetenis.modelo.Conexion;
import torneodetenis.modelo.Ranking;
import torneodetenis.modelo.Torneo;

/**
 *
 * @author Santiago
 */
public class vistaObtenerRankingTrabajo extends javax.swing.JInternalFrame {
    private DefaultTableModel modelo;
    /**
     * Creates new form vistaObtenerRankingTrabajo
     */
    public vistaObtenerRankingTrabajo() {
        initComponents();
        modelo = new DefaultTableModel();
        this.llenarItems();
        this.armarCabezera();
        this.borrarFila();
        this.llenarTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jcTorneos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jrRanking = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);

        jcTorneos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTorneosActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Obtener Ranking");

        jrRanking.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jrRanking);

        jLabel2.setText("Torneos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 538, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 15, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(201, 201, 201))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jcTorneos, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(189, 189, 189))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcTorneos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jcTorneosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTorneosActionPerformed
        // TODO add your handling code here:
        this.borrarFila();
        this.llenarTabla();
    }//GEN-LAST:event_jcTorneosActionPerformed
    
    private void llenarItems(){
        try{
            Conexion conexion = new Conexion();
            TorneoData td = new TorneoData(conexion);
        
            ArrayList<Torneo> torneos = (ArrayList<Torneo>) td.obtenerTorneos();
        
            for(Torneo t : torneos){
                jcTorneos.addItem(t);
            }
        }catch(ClassNotFoundException ex){
            JOptionPane.showMessageDialog(null, "Error en la conexion " + ex);
        }
    }
    
    private void armarCabezera(){
        ArrayList<Object> titulos = new ArrayList<>();
        
        titulos.add("Torneo");
        titulos.add("Jugador");
        titulos.add("Puntaje");
        
        
        for(Object titulo: titulos){
            modelo.addColumn(titulo);
        }
        
        jrRanking.setModel(modelo);
    }
    
    private void llenarTabla(){
        try{
            Conexion conexion = new Conexion();
            RankingData rd = new RankingData(conexion);
            Torneo t = (Torneo) jcTorneos.getSelectedItem();
            
            ArrayList<Ranking> rankings = (ArrayList<Ranking>) rd.obtenerRankingTorneo(t.getId_torneo());
        
        
            for(Ranking i: rankings){
                modelo.addRow(new Object[]{i.getTorneo(), i.getJugador(), i.getPuntaje()});
            }
        }catch(ClassNotFoundException ex){
            JOptionPane.showMessageDialog(null, "Error en la conexion" + ex);
        }   
    }
    
    private void borrarFila(){
        
        int filas = modelo.getRowCount() - 1;
        
        for (int cont = filas; cont >= 0; cont--){
            modelo.removeRow(cont);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<Torneo> jcTorneos;
    private javax.swing.JTable jrRanking;
    // End of variables declaration//GEN-END:variables
}
